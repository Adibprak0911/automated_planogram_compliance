import pyexcel_ods

def generate_sdf_from_ods(ods_file_path, sdf_output_path):
    try:
        # Load the ODS file
        data = pyexcel_ods.get_data(ods_file_path)
        
        # Assuming there's only one sheet
        sheet = data[list(data.keys())[0]]  # Get the first (and only) sheet

        # Open a file to write SDF content
        with open(sdf_output_path, 'w') as sdf_file:
            sdf_file.write('<sdf version="1.9">\n')
            sdf_file.write('  <world name="windy">\n')
            sdf_file.write('    <physics type="ode">\n')
            sdf_file.write('      <max_step_size>0.004</max_step_size>\n')
            sdf_file.write('      <real_time_factor>1.0</real_time_factor>\n')
            sdf_file.write('      <real_time_update_rate>250</real_time_update_rate>\n')
            sdf_file.write('    </physics>\n')
            sdf_file.write('    <plugin name="gz::sim::systems::Physics" filename="gz-sim-physics-system"/>\n')
            sdf_file.write('    <plugin name="gz::sim::systems::UserCommands" filename="gz-sim-user-commands-system"/>\n')
            sdf_file.write('    <plugin name="gz::sim::systems::SceneBroadcaster" filename="gz-sim-scene-broadcaster-system"/>\n')
            sdf_file.write('    <plugin name="gz::sim::systems::Contact" filename="gz-sim-contact-system"/>\n')
            sdf_file.write('    <plugin name="gz::sim::systems::Imu" filename="gz-sim-imu-system"/>\n')
            sdf_file.write('    <plugin name="gz::sim::systems::AirPressure" filename="gz-sim-air-pressure-system"/>\n')
            sdf_file.write('    <plugin name="gz::sim::systems::ApplyLinkWrench" filename="gz-sim-apply-link-wrench-system"/>\n')
            sdf_file.write('    <plugin name="gz::sim::systems::NavSat" filename="gz-sim-navsat-system"/>\n')
            sdf_file.write('    <plugin name="gz::sim::systems::Sensors" filename="gz-sim-sensors-system">\n')
            sdf_file.write('      <render_engine>ogre2</render_engine>\n')
            sdf_file.write('    </plugin>\n')
            sdf_file.write('    <gui fullscreen="false">\n')
            sdf_file.write('      <!-- 3D scene -->\n')
            sdf_file.write('      <plugin filename="MinimalScene" name="3D View">\n')
            sdf_file.write('        <gz-gui>\n')
            sdf_file.write('          <title>3D View</title>\n')
            sdf_file.write('          <property type="bool" key="showTitleBar">false</property>\n')
            sdf_file.write('          <property type="string" key="state">docked</property>\n')
            sdf_file.write('        </gz-gui>\n')
            sdf_file.write('        <engine>ogre2</engine>\n')
            sdf_file.write('        <scene>scene</scene>\n')
            sdf_file.write('        <ambient_light>0.4 0.4 0.4</ambient_light>\n')
            sdf_file.write('        <background_color>0.8 0.8 0.8</background_color>\n')
            sdf_file.write('        <camera_pose>-6 0 6 0 0.5 0</camera_pose>\n')
            sdf_file.write('        <camera_clip>\n')
            sdf_file.write('          <near>0.25</near>\n')
            sdf_file.write('          <far>25000</far>\n')
            sdf_file.write('        </camera_clip>\n')
            sdf_file.write('      </plugin>\n')
            sdf_file.write('      <!-- Plugins that add functionality to the scene -->\n')
            sdf_file.write('      <plugin filename="EntityContextMenuPlugin" name="Entity context menu">\n')
            sdf_file.write('        <gz-gui>\n')
            sdf_file.write('          <property key="state" type="string">floating</property>\n')
            sdf_file.write('          <property key="width" type="double">5</property>\n')
            sdf_file.write('          <property key="height" type="double">5</property>\n')
            sdf_file.write('          <property key="showTitleBar" type="bool">false</property>\n')
            sdf_file.write('        </gz-gui>\n')
            sdf_file.write('      </plugin>\n')
            sdf_file.write('      <plugin filename="GzSceneManager" name="Scene Manager">\n')
            sdf_file.write('        <gz-gui>\n')
            sdf_file.write('          <property key="resizable" type="bool">false</property>\n')
            sdf_file.write('          <property key="width" type="double">5</property>\n')
            sdf_file.write('          <property key="height" type="double">5</property>\n')
            sdf_file.write('          <property key="state" type="string">floating</property>\n')
            sdf_file.write('          <property key="showTitleBar" type="bool">false</property>\n')
            sdf_file.write('        </gz-gui>\n')
            sdf_file.write('      </plugin>\n')
            sdf_file.write('      <plugin filename="InteractiveViewControl" name="Interactive view control">\n')
            sdf_file.write('        <gz-gui>\n')
            sdf_file.write('          <property key="resizable" type="bool">false</property>\n')
            sdf_file.write('          <property key="width" type="double">5</property>\n')
            sdf_file.write('          <property key="height" type="double">5</property>\n')
            sdf_file.write('          <property key="state" type="string">floating</property>\n')
            sdf_file.write('          <property key="showTitleBar" type="bool">false</property>\n')
            sdf_file.write('        </gz-gui>\n')
            sdf_file.write('      </plugin>\n')
            sdf_file.write('      <plugin filename="CameraTracking" name="Camera Tracking">\n')
            sdf_file.write('        <gz-gui>\n')
            sdf_file.write('          <property key="resizable" type="bool">false</property>\n')
            sdf_file.write('          <property key="width" type="double">5</property>\n')
            sdf_file.write('          <property key="height" type="double">5</property>\n')
            sdf_file.write('          <property key="state" type="string">floating</property>\n')
            sdf_file.write('          <property key="showTitleBar" type="bool">false</property>\n')
            sdf_file.write('        </gz-gui>\n')
            sdf_file.write('      </plugin>\n')
            sdf_file.write('      <plugin filename="MarkerManager" name="Marker manager">\n')
            sdf_file.write('        <gz-gui>\n')
            sdf_file.write('          <property key="resizable" type="bool">false</property>\n')
            sdf_file.write('          <property key="width" type="double">5</property>\n')
            sdf_file.write('          <property key="height" type="double">5</property>\n')
            sdf_file.write('          <property key="state" type="string">floating</property>\n')
            sdf_file.write('          <property key="showTitleBar" type="bool">false</property>\n')
            sdf_file.write('        </gz-gui>\n')
            sdf_file.write('      </plugin>\n')
            sdf_file.write('      <plugin filename="SelectEntities" name="Select Entities">\n')
            sdf_file.write('        <gz-gui>\n')
            sdf_file.write('          <anchors target="Select entities">\n')
            sdf_file.write('            <line own="right" target="right"/>\n')
            sdf_file.write('            <line own="top" target="top"/>\n')
            sdf_file.write('          </anchors>\n')
            sdf_file.write('          <property key="resizable" type="bool">false</property>\n')
            sdf_file.write('          <property key="width" type="double">5</property>\n')
            sdf_file.write('          <property key="height" type="double">5</property>\n')
            sdf_file.write('          <property key="state" type="string">floating</property>\n')
            sdf_file.write('          <property key="showTitleBar" type="bool">false</property>\n')
            sdf_file.write('        </gz-gui>\n')
            sdf_file.write('      </plugin>\n')
            sdf_file.write('      <plugin filename="VisualizationCapabilities" name="Visualization Capabilities">\n')
            sdf_file.write('        <gz-gui>\n')
            sdf_file.write('          <property key="resizable" type="bool">false</property>\n')
            sdf_file.write('          <property key="width" type="double">5</property>\n')
            sdf_file.write('          <property key="height" type="double">5</property>\n')
            sdf_file.write('          <property key="state" type="string">floating</property>\n')
            sdf_file.write('          <property key="showTitleBar" type="bool">false</property>\n')
            sdf_file.write('        </gz-gui>\n')
            sdf_file.write('      </plugin>\n')
            sdf_file.write('      <plugin filename="Spawn" name="Spawn Entities">\n')
            sdf_file.write('        <gz-gui>\n')
            sdf_file.write('          <anchors target="Select entities">\n')
            sdf_file.write('            <line own="right" target="right"/>\n')
            sdf_file.write('            <line own="top" target="top"/>\n')
            sdf_file.write('          </anchors>\n')
            sdf_file.write('          <property key="resizable" type="bool">false</property>\n')
            sdf_file.write('          <property key="width" type="double">5</property>\n')
            sdf_file.write('          <property key="height" type="double">5</property>\n')
            sdf_file.write('          <property key="state" type="string">floating</property>\n')
            sdf_file.write('          <property key="showTitleBar" type="bool">false</property>\n')
            sdf_file.write('        </gz-gui>\n')
            sdf_file.write('      </plugin>\n')
            sdf_file.write('      <plugin name="World control" filename="WorldControl">\n')
            sdf_file.write('        <gz-gui>\n')
            sdf_file.write('          <title>World control</title>\n')
            sdf_file.write('          <property type="bool" key="showTitleBar">0</property>\n')
            sdf_file.write('          <property type="bool" key="resizable">0</property>\n')
            sdf_file.write('          <property type="double" key="height">72</property>\n')
            sdf_file.write('          <property type="double" key="width">121</property>\n')
            sdf_file.write('          <property type="double" key="z">1</property>\n')
            sdf_file.write('          <property type="string" key="state">floating</property>\n')
            sdf_file.write('          <anchors target="3D View">\n')
            sdf_file.write('            <line own="left" target="left"/>\n')
            sdf_file.write('            <line own="bottom" target="bottom"/>\n')
            sdf_file.write('          </anchors>\n')
            sdf_file.write('        </gz-gui>\n')
            sdf_file.write('        <play_pause>1</play_pause>\n')
            sdf_file.write('        <step>1</step>\n')
            sdf_file.write('        <start_paused>1</start_paused>\n')
            sdf_file.write('      </plugin>\n')
            sdf_file.write('      <plugin name="World stats" filename="WorldStats">\n')
            sdf_file.write('        <gz-gui>\n')
            sdf_file.write('          <title>World stats</title>\n')
            sdf_file.write('          <property type="bool" key="showTitleBar">0</property>\n')
            sdf_file.write('          <property type="bool" key="resizable">0</property>\n')
            sdf_file.write('          <property type="double" key="height">110</property>\n')
            sdf_file.write('          <property type="double" key="width">290</property>\n')
            sdf_file.write('          <property type="double" key="z">1</property>\n')
            sdf_file.write('          <property type="string" key="state">floating</property>\n')
            sdf_file.write('          <anchors target="3D View">\n')
            sdf_file.write('            <line own="right" target="right"/>\n')
            sdf_file.write('            <line own="bottom" target="bottom"/>\n')
            sdf_file.write('          </anchors>\n')
            sdf_file.write('        </gz-gui>\n')
            sdf_file.write('        <sim_time>1</sim_time>\n')
            sdf_file.write('        <real_time>1</real_time>\n')
            sdf_file.write('        <real_time_factor>1</real_time_factor>\n')
            sdf_file.write('        <iterations>1</iterations>\n')
            sdf_file.write('      </plugin>\n')
            sdf_file.write('      <plugin name="Entity tree" filename="EntityTree"/>\n')
            sdf_file.write('    </gui>\n')
            sdf_file.write('    <gravity>0 0 -9.8</gravity>\n')
            sdf_file.write('    <magnetic_field>6e-06 2.3e-05 -4.2e-05</magnetic_field>\n')
            sdf_file.write('    <atmosphere type="adiabatic"/>\n')
            sdf_file.write('    <scene>\n')
            sdf_file.write('      <grid>false</grid>\n')
            sdf_file.write('      <ambient>0.4 0.4 0.4 1</ambient>\n')
            sdf_file.write('      <background>0.7 0.7 0.7 1</background>\n')
            sdf_file.write('      <shadows>true</shadows>\n')
            sdf_file.write('    </scene>\n')
            sdf_file.write('    <model name="ground_plane">\n')
            sdf_file.write('      <static>true</static>\n')
            sdf_file.write('      <link name="link">\n')
            sdf_file.write('        <collision name="collision">\n')
            sdf_file.write('          <geometry>\n')
            sdf_file.write('            <plane>\n')
            sdf_file.write('              <normal>0 0 1</normal>\n')
            sdf_file.write('              <size>1 1</size>\n')
            sdf_file.write('            </plane>\n')
            sdf_file.write('          </geometry>\n')
            sdf_file.write('          <surface>\n')
            sdf_file.write('            <friction>\n')
            sdf_file.write('              <ode/>\n')
            sdf_file.write('            </friction>\n')
            sdf_file.write('            <bounce/>\n')
            sdf_file.write('            <contact/>\n')
            sdf_file.write('          </surface>\n')
            sdf_file.write('        </collision>\n')
            sdf_file.write('        <visual name="visual">\n')
            sdf_file.write('          <geometry>\n')
            sdf_file.write('            <plane>\n')
            sdf_file.write('              <normal>0 0 1</normal>\n')
            sdf_file.write('              <size>100 100</size>\n')
            sdf_file.write('            </plane>\n')
            sdf_file.write('          </geometry>\n')
            sdf_file.write('          <material>\n')
            sdf_file.write('            <ambient>0.8 0.8 0.8 1</ambient>\n')
            sdf_file.write('            <diffuse>0.8 0.8 0.8 1</diffuse>\n')
            sdf_file.write('            <specular>0.8 0.8 0.8 1</specular>\n')
            sdf_file.write('          </material>\n')
            sdf_file.write('        </visual>\n')
            sdf_file.write('        <pose>0 0 0 0 -0 0</pose>\n')
            sdf_file.write('        <inertial>\n')
            sdf_file.write('          <pose>0 0 0 0 -0 0</pose>\n')
            sdf_file.write('          <mass>1</mass>\n')
            sdf_file.write('          <inertia>\n')
            sdf_file.write('            <ixx>1</ixx>\n')
            sdf_file.write('            <ixy>0</ixy>\n')
            sdf_file.write('            <ixz>0</ixz>\n')
            sdf_file.write('            <iyy>1</iyy>\n')
            sdf_file.write('            <iyz>0</iyz>\n')
            sdf_file.write('            <izz>1</izz>\n')
            sdf_file.write('          </inertia>\n')
            sdf_file.write('        </inertial>\n')
            sdf_file.write('        <enable_wind>true</enable_wind>\n')
            sdf_file.write('      </link>\n')
            sdf_file.write('      <pose>0 0 0 0 -0 0</pose>\n')
            sdf_file.write('      <self_collide>false</self_collide>\n')
            sdf_file.write('    </model>\n')
            sdf_file.write('    <light name="sunUTC" type="directional">\n')
            sdf_file.write('      <pose>0 0 500 0 -0 0</pose>\n')
            sdf_file.write('      <cast_shadows>true</cast_shadows>\n')
            sdf_file.write('      <intensity>1</intensity>\n')
            sdf_file.write('      <direction>0.001 0.625 -0.78</direction>\n')
            sdf_file.write('      <diffuse>0.904 0.904 0.904 1</diffuse>\n')
            sdf_file.write('      <specular>0.271 0.271 0.271 1</specular>\n')
            sdf_file.write('      <attenuation>\n')
            sdf_file.write('        <range>2000</range>\n')
            sdf_file.write('        <linear>0</linear>\n')
            sdf_file.write('        <constant>1</constant>\n')
            sdf_file.write('        <quadratic>0</quadratic>\n')
            sdf_file.write('      </attenuation>\n')
            sdf_file.write('      <spot>\n')
            sdf_file.write('        <inner_angle>0</inner_angle>\n')
            sdf_file.write('        <outer_angle>0</outer_angle>\n')
            sdf_file.write('        <falloff>0</falloff>\n')
            sdf_file.write('      </spot>\n')
            sdf_file.write('    </light>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <uri>model://Warehouse</uri>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> 0 3 0.1 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('        <include>\n')
            sdf_file.write('      <pose> 0 3 0.8 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf1</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> 3 3 0.1 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf2</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> 3 3 0.8 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf3</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> -3 3 0.1 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf4</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> -3 3 0.8 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf5</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> 0.2 3 0.4 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://coke_can</uri>\n')
            sdf_file.write('      <name>coke0</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> -0.15 3 0.5 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://Little_Debbie_Chocolate_Cupcakes_8_ct</uri>\n')
            sdf_file.write('      <name>cc00</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> 0 -3 0.1 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf00</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> 0 -3 0.8 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf01</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> 3 -3 0.1 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf02</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> 3 -3 0.8 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf03</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> -3 -3 0.1 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf04</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> -3 -3 0.8 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://SquareShelf</uri>\n')
            sdf_file.write('      <name>shelf05</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> 0.2 -3 0.4 0 0 0 </pose>\n')
            sdf_file.write('      <uri>model://coke_can</uri>\n')
            sdf_file.write('      <name>coke01</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            sdf_file.write('    <include>\n')
            sdf_file.write('      <pose> -0.15 -3 0.5 0 0 0 </pose>\n')
            sdf_file.write('      <uri>mo   del://Little_Debbie_Chocolate_Cupcakes_8_ct</uri>\n')
            sdf_file.write('      <name>cc1</name>\n')
            sdf_file.write('      <scale> 2 2 2 </scale>\n')
            sdf_file.write('    </include>\n')
            

            # Iterate through rows, starting from the second row (index 1)
            for index, row in enumerate(sheet[1:], start=1):
                if len(row) >= 7:
                    item_name = row[0]      # Column 1: Item name
                    x = float(row[1]) if row[1] else 0.0   # Column 2: X coordinate
                    y = float(row[2]) if row[2] else 0.0   # Column 3: Y coordinate
                    z = float(row[3]) if row[3] else 0.0   # Column 4: Z coordinate
                    roll = float(row[4]) if row[4] else 0.0  # Column 5: Roll (in degrees)
                    pitch = float(row[5]) if row[5] else 0.0  # Column 6: Pitch (in degrees)
                    yaw = float(row[6]) if row[6] else 0.0   # Column 7: Yaw (in degrees)
                    include_flag = int(row[7]) == 1         # Column 8: 1 for True, 0 for False

                    if include_flag:
                        # Write model definition to SDF
                        sdf_file.write('<include>\n')
                        sdf_file.write(f'  <uri>model://{item_name}</uri>\n')  # Use item_name in the URI tag
                        sdf_file.write(f'  <name>{item_name}{index}</name>\n')
                        sdf_file.write(f'  <pose>{x} {y} {z} {roll} {pitch} {yaw}</pose>\n')
                        sdf_file.write('</include>\n')

            sdf_file.write('    <spherical_coordinates>\n')
            sdf_file.write('      <surface_model>EARTH_WGS84</surface_model>\n')
            sdf_file.write('      <world_frame_orientation>ENU</world_frame_orientation>\n')
            sdf_file.write('      <latitude_deg>47.397971057728974</latitude_deg>\n')
            sdf_file.write('      <longitude_deg> 8.546163739800146</longitude_deg>\n')
            sdf_file.write('      <elevation>0</elevation>\n')
            sdf_file.write('    </spherical_coordinates>\n')
            sdf_file.write('  </world>\n')
            sdf_file.write('</sdf>\n')
            sdf_file.close()

    except Exception as e:
        print(f"Error processing ODS file: {e}")

# Example usage
ods_file_path = '/home/inlab22/Documents/Planogram.ods'  # Adjust this path to your actual ODS file location
sdf_output_path = '/home/inlab22/Documents/automated_planogram_compliance-1/simulations/PX4-Autopilot/Tools/simulation/gz/worlds/model_import.sdf'  # Adjust this path to your desired SDF output location
generate_sdf_from_ods(ods_file_path, sdf_output_path)
